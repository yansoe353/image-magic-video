
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://rhbpeivthnmvzhblnvya.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJoYnBlaXZ0aG5tdnpoYmxudnlhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDIzMTQ4MDAsImV4cCI6MjA1Nzg5MDgwMH0.XzviG_Ir2UKIpMR2Vsh8RE3rppQvz7awjNZvfF7eVMI";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Helper function to call the Fal.ai proxy Edge Function
export async function callFalApi(endpoint: string, params: any = {}) {
  try {
    const { data, error } = await supabase.functions.invoke('fal-ai-proxy', {
      body: { endpoint, params },
    });

    if (error) {
      console.error('Error calling Fal.ai proxy:', error);
      throw new Error(error.message);
    }

    return data;
  } catch (error) {
    console.error('Error calling Fal.ai proxy:', error);
    throw error;
  }
}

// Helper function to upload a file to Fal.ai
export async function uploadToFal(file: File) {
  const formData = new FormData();
  formData.append('file', file);

  try {
    const response = await fetch(`${SUPABASE_URL}/functions/v1/fal-ai-proxy`, {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${SUPABASE_PUBLISHABLE_KEY}`,
      },
      body: JSON.stringify({
        endpoint: 'upload',
        params: {
          file: await file.arrayBuffer(),
        },
      }),
    });

    if (!response.ok) {
      throw new Error(`Upload failed: ${response.statusText}`);
    }

    const data = await response.json();
    return data.url || '';
  } catch (error) {
    console.error('Upload error:', error);
    throw error;
  }
}
