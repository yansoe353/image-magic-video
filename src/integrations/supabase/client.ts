
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://rhbpeivthnmvzhblnvya.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJoYnBlaXZ0aG5tdnpoYmxudnlhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDIzMTQ4MDAsImV4cCI6MjA1Nzg5MDgwMH0.XzviG_Ir2UKIpMR2Vsh8RE3rppQvz7awjNZvfF7eVMI";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Helper function to call the Fal.ai proxy Edge Function
export async function callFalApi(endpoint: string, params: any = {}) {
  console.log(`Calling Fal.ai proxy with endpoint ${endpoint}`, params);
  try {
    const { data, error } = await supabase.functions.invoke('fal-ai-proxy', {
      body: { endpoint, params },
    });

    if (error) {
      console.error('Error calling Fal.ai proxy:', error);
      throw new Error(error.message || 'Failed to call Fal.ai API proxy');
    }

    return data;
  } catch (error) {
    console.error('Error calling Fal.ai proxy:', error);
    throw error;
  }
}

// Helper function to upload a file to Fal.ai
export async function uploadToFal(file: File) {
  console.log('Uploading file to Fal.ai:', file.name, file.size);
  
  try {
    // Convert file to ArrayBuffer
    const arrayBuffer = await file.arrayBuffer();
    
    console.log('File converted to ArrayBuffer, size:', arrayBuffer.byteLength);
    
    const { data, error } = await supabase.functions.invoke('fal-ai-proxy', {
      body: {
        endpoint: 'upload',
        params: {
          file: Array.from(new Uint8Array(arrayBuffer)),
        },
      },
    });
    
    if (error) {
      console.error('Upload error from Edge Function:', error);
      throw new Error(error.message || 'File upload failed');
    }
    
    console.log('Upload response from Edge Function:', data);
    return data.url || '';
  } catch (error) {
    console.error('Upload error:', error);
    throw error;
  }
}
